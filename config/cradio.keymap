// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define U_WH_U &msc SCRL_UP
#define U_WH_D &msc SCRL_DOWN
#define U_WH_L &msc SCRL_LEFT
#define U_WH_R &msc SCRL_RIGHT

&sk { quick-release; };

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        leftAlt {
            bindings = <&sk LEFT_ALT>;
            key-positions = <13 14>;
        };

        leftCmd {
            bindings = <&sk LCMD>;
            key-positions = <13 12>;
        };

        leftShift {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <12 11>;
        };

        leftCtl {
            bindings = <&sk LCTRL>;
            key-positions = <10 11>;
        };

        rightAlt {
            bindings = <&sk LEFT_ALT>;
            key-positions = <15 16>;
        };

        rightCmd {
            bindings = <&sk LCMD>;
            key-positions = <16 17>;
        };

        rightShift {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <17 18>;
        };

        rightCtl {
            bindings = <&sk LCTRL>;
            key-positions = <19 18>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <21 22>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 8>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <28 27>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T         &kp Y      &kp U      &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F  &kp G         &kp H      &kp J      &kp K      &kp L    &kp SEMICOLON
&kp Z  &kp X  &kp C  &kp V  &kp B         &kp N      &kp M      &kp COMMA  &kp DOT  &kp SLASH
                     &to 2  &kp LSHIFT    &kp LCTRL  &kp SPACE
            >;
        };

        digit_layer {
            bindings = <
&none   &none   &none   &none   &none     &none     &none     &none   &none      &none
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0
&none   &none   &none   &none   &none     &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none
                        &none   &none     &none     &to 0
            >;

            label = "digit";
        };

        symb_layer {
            bindings = <
&kp LT     &kp GT   &kp SINGLE_QUOTE  &kp SEMI   &kp BACKSLASH    &kp PIPE   &kp COLON  &kp DQT       &kp LBKT  &kp RBKT
&kp EXCL   &kp AT   &kp HASH          &kp DLLR   &kp PRCNT        &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR  &kp RPAR
&kp COMMA  &kp DOT  &kp PLUS          &kp MINUS  &kp TILDE        &kp GRAVE  &kp UNDER  &kp EQUAL     &kp LBRC  &kp RBRC
                                      &to 3      &none            &to 1      &to 0
            >;

            label = "symb";
        };

        magic_layer {
            bindings = <
&none  &none  &none  &none  &none                       &none  &none  &none  &none  &default_report
&none  &none  &none  &none  &kp LG(LS(LC(NUMBER_4)))    &none  &none  &none  &none  &bootloader
&none  &none  &none  &none  &kp LG(LS(NUMBER_4))        &none  &none  &none  &none  &none
                     &none  &to 4                       &none  &to 0
            >;

            label = "magic";
        };

        setting_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_CLR  &trans  &trans  &trans  &trans
&out OUT_TOG  &trans        &trans        &trans        &bt BT_CLR      &trans      &trans  &trans  &trans  &trans
&kp S         &trans        &trans        &trans        &to 0           &trans      &trans  &trans  &trans  &trans
                                          &trans        &trans          &trans      &to 0
            >;

            label = "setting";
        };
    };
};
